// User Template For C++

class Solution{
 public:
 int LCS(string X, string Y, int m, int n, vector<vector<int>>& dp) {
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= m; ++j) {
            if (X[i - 1] == Y[j - 1]) { 
                dp[i][j] = 1 + dp[i - 1][j - 1];
            } else {
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
            }
        }
    }
    return dp[n][m];
}
    int minOperations(string str1, string str2) {
        int n = str1.length();
        int m = str2.length();
        int combinedLength = m + n;
        vector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));
        int longestCommonSubsequence = LCS(str1, str2, m, n, dp);
        int totalOperation = combinedLength - 2 * longestCommonSubsequence;
        return totalOperation;
    }
};
