// User Template For C++

class Solution {
  public:
    int dx[8] = {-1, -1, 0, 1, 1, 1, 0, -1};
    int dy[8] = {0, 1, 1, 1, 0, -1, -1, -1};
    bool isValid(int i, int j, int &n ,int &m, vector<vector<char>> &g){
        return (i>=0 && j>=0 && i<n && j<m && g[i][j]=='L'); }
    int countIslands(vector<vector<char>>& grid) {
        int ans = 0;
        queue<pair<int, int>> q;
        int n = grid.size();
        int m = grid[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j] == 'L'){
                    ans++;
                    q.push({i, j});
                    grid[i][j] = 'S';
                    while(!q.empty()){
                        auto z = q.front();
                        q.pop();
                        int f = z.first;
                        int s = z.second;
                        for(int k=0;k<8;k++){
                            int x = f+dx[k];
                            int y = s+dy[k];
                            if(isValid(x, y, n, m, grid)){
                                grid[x][y] = 's';
                                q.push({x, y});
                            }
                        }
                    }
                }
            }
        }
        return ans;
    }
};
